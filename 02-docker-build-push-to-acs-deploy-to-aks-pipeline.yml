trigger:
- master

variables:
  imageRepository: 'app1nginxaks'
  containerRegistry: 'docker-service-connection'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build & Push Image
    jobs:
      - job: Build
        displayName: Build & Push Job
        steps:

        - task: Docker@2
          displayName: Build & Push image to ACR
          inputs:
            containerRegistry: '$(containerRegistry)'
            repository: '$(imageRepository)'
            command: 'buildAndPush'
            Dockerfile: '$(dockerfilePath)'
            tags: '$(tag)'
        - upload: manifests
          artifact: kube-manifests/01-Deployment-and-LoadBalancer-Service.yml


  - stage: Deploy
    displayName: Deploy Stage
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: aks-test-env.default
        strategy:
         runOnce:
            deploy:
              steps:
              - task: KubernetesManifest@0
                inputs:
                  action: 'createSecret'
                  kubernetesServiceConnection: 'myAksCluster-default'
                  namespace: 'default'
                  secretType: 'dockerRegistry'
                  secretName: 'imagepullsecret'
                  dockerRegistryEndpoint: 'docker-service-connection'
              - task: KubernetesManifest@0
                inputs:
                  action: 'deploy'
                  kubernetesServiceConnection: 'myAksCluster-default'
                  namespace: 'default'
                  manifests: |
                    kube-manifests/01-Deployment-and-LoadBalancer-Service.yml
                  containers: '$(containerRegistry)/$(imageRepository):$(tag)'
                  imagePullSecrets: 'imagepullsecret'
